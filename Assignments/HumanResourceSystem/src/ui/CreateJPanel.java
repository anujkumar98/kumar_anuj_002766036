/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Person;
import models.PersonRegistry;

/**
 *
 * @author anujkumar
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    PersonRegistry personsRecord;
    byte [] profileImage;
    public CreateJPanel(PersonRegistry personsRecord) {
        initComponents();
        this.personsRecord=personsRecord;
        addDropDownElements();
        jTextFieldStartDate.setText(LocalDate.now().toString());
        jRadioButtonFemale.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelEmployeeID = new javax.swing.JLabel();
        jTextFieldEmployeeID = new javax.swing.JTextField();
        jLabelNameAge = new javax.swing.JLabel();
        jTextFieldAge = new javax.swing.JTextField();
        jLabelAgeGender = new javax.swing.JLabel();
        jLabelNameStartDate = new javax.swing.JLabel();
        jTextFieldStartDate = new javax.swing.JTextField();
        jLabelAgeLevel = new javax.swing.JLabel();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jRadioButtonMale = new javax.swing.JRadioButton();
        choicePositionTitle = new java.awt.Choice();
        jLabelLevel = new javax.swing.JLabel();
        jTextFieldLevel = new javax.swing.JTextField();
        jLabelTeamInfo = new javax.swing.JLabel();
        jTextFieldTeamInfo = new javax.swing.JTextField();
        jLabelCellPhoneNumber = new javax.swing.JLabel();
        jTextFieldCellNumber = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelEmail1 = new javax.swing.JLabel();
        jButtonChoseFile = new javax.swing.JButton();
        jLabelImage = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1200, 600));
        setRequestFocusEnabled(false);

        jLabelTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("CREATE NEW RECORD");
        jLabelTitle.setToolTipText("");
        jLabelTitle.setAlignmentY(0.0F);

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabelName.setText("Name:");

        jLabelEmployeeID.setText("Employee Id:");

        jTextFieldEmployeeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeeIDActionPerformed(evt);
            }
        });

        jLabelNameAge.setText("Age:");

        jLabelAgeGender.setText("Gender:");

        jLabelNameStartDate.setText("Start Date:");

        jTextFieldStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStartDateActionPerformed(evt);
            }
        });

        jLabelAgeLevel.setText("Position Title:");

        jRadioButtonFemale.setText("Female");
        jRadioButtonFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFemaleActionPerformed(evt);
            }
        });

        jRadioButtonMale.setText("Male");
        jRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMaleActionPerformed(evt);
            }
        });

        jLabelLevel.setText("Level:");

        jLabelTeamInfo.setText("Team Info:");

        jTextFieldTeamInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTeamInfoActionPerformed(evt);
            }
        });

        jLabelCellPhoneNumber.setText("Cell Phone Number:");

        jLabelEmail.setText("Email Address:");

        jLabelEmail1.setText("Photo:");

        jButtonChoseFile.setText("Browse Files");
        jButtonChoseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChoseFileActionPerformed(evt);
            }
        });

        jLabelImage.setSize(new java.awt.Dimension(120, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelName)
                                    .addComponent(jLabelEmployeeID))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldName)
                                    .addComponent(jTextFieldEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelNameAge)
                                    .addComponent(jLabelAgeGender))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonMale, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)
                                        .addComponent(jRadioButtonFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelNameStartDate)
                                    .addComponent(jLabelAgeLevel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(choicePositionTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelLevel)
                            .addComponent(jLabelCellPhoneNumber)
                            .addComponent(jLabelTeamInfo)
                            .addComponent(jLabelEmail)
                            .addComponent(jLabelEmail1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldEmail)
                    .addComponent(jTextFieldLevel)
                    .addComponent(jTextFieldTeamInfo)
                    .addComponent(jTextFieldCellNumber)
                    .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonChoseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(449, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabelTitle)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEmployeeID)
                            .addComponent(jTextFieldEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNameAge)
                            .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLevel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTeamInfo)
                            .addComponent(jTextFieldTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCellPhoneNumber)
                            .addComponent(jTextFieldCellNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEmail1)
                            .addComponent(jButtonChoseFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAgeGender)
                            .addComponent(jRadioButtonMale)
                            .addComponent(jRadioButtonFemale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNameStartDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAgeLevel)
                            .addComponent(choicePositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSave)))
                .addContainerGap(254, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        Person notValidated=new Person();
        notValidated.setName(jTextFieldName.getText());
        try{
            notValidated.setAge(Integer.parseInt(jTextFieldAge.getText()));
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this,"Age must be entered in numbers.");
        }
        if (jRadioButtonFemale.isSelected()){
            notValidated.setGender("Female");
        }
        else if (jRadioButtonMale.isSelected()){
            notValidated.setGender("Male");
        } 
        else {
            notValidated.setGender("Not Selected");
        }
        notValidated.setEmployeeId(jTextFieldEmployeeID.getText());
        
        try{
            notValidated.setStartDate(LocalDate.parse(jTextFieldStartDate.getText()));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Please enter data in format YYYY-MM-DD");
        }
        notValidated.setPositionTitle(choicePositionTitle.getSelectedItem());
        notValidated.setTeamInfo(jTextFieldTeamInfo.getText());
        notValidated.setLevel(jTextFieldLevel.getText());
        notValidated.setCellPhoneNumber(jTextFieldCellNumber.getText());
        notValidated.setEmailAddress(jTextFieldEmail.getText());
        notValidated.setProfileImage(profileImage);
        if (validateInputFields(notValidated) == 1){
            //notValidated=personsRecord.addNewPerson();
            personsRecord.addNewPerson(notValidated);
            JOptionPane.showMessageDialog(this,"Person Information Saved.");
            jTextFieldName.setText("");
            jTextFieldAge.setText("");
            jRadioButtonMale.setSelected(false);
            jTextFieldEmployeeID.setText("");
            jTextFieldStartDate.setText(LocalDate.now().toString());
            jTextFieldTeamInfo.setText("");
            jTextFieldLevel.setText("");
            jTextFieldCellNumber.setText("");
            jTextFieldEmail.setText("");
            jRadioButtonFemale.setSelected(true);
            profileImage=null;
            jLabelImage.setIcon(null);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldEmployeeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmployeeIDActionPerformed

    private void jRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMaleActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonMale.isSelected()){
            jRadioButtonFemale.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButtonMaleActionPerformed

    private void jRadioButtonFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFemaleActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonFemale.isSelected()){
            jRadioButtonMale.setSelected(false);
            
        }
    }//GEN-LAST:event_jRadioButtonFemaleActionPerformed

    private void jTextFieldStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStartDateActionPerformed

    private void jTextFieldTeamInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTeamInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTeamInfoActionPerformed

    private void jButtonChoseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChoseFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser=new JFileChooser();
        int responseCode=jFileChooser.showOpenDialog(null);
        if(responseCode == JFileChooser.APPROVE_OPTION){
            //File fileName=new File(jFileChooser.getSelectedFile().getAbsolutePath());
            FileNameExtensionFilter fileNameFilter=new FileNameExtensionFilter("Images",".jpg",".png",".gif");
            jFileChooser.addChoosableFileFilter(fileNameFilter);
            File selectedFile=jFileChooser.getSelectedFile();
            String pathSelected=selectedFile.getAbsolutePath();
            JOptionPane.showMessageDialog(this,"File Selected: "+pathSelected);
            if (selectedFile == null){
                System.out.print("No file selected");
            }
            byte[] imageArray = new byte[(int) selectedFile.length()];
            try {
               FileInputStream fileInputStream = new FileInputStream(selectedFile);
               fileInputStream.read(imageArray);
            }
            catch (IOException e1) {
                   JOptionPane.showMessageDialog(this,"File must be image type.");
            }
            profileImage=imageArray;
            ImageIcon icon = new ImageIcon(profileImage);
            Image scaleImage = icon.getImage().getScaledInstance(28, 28,Image.SCALE_DEFAULT);
            jLabelImage.setIcon(icon);
        }
    }//GEN-LAST:event_jButtonChoseFileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice choicePositionTitle;
    private javax.swing.JButton jButtonChoseFile;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabelAgeGender;
    private javax.swing.JLabel jLabelAgeLevel;
    private javax.swing.JLabel jLabelCellPhoneNumber;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelEmail1;
    private javax.swing.JLabel jLabelEmployeeID;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelNameAge;
    private javax.swing.JLabel jLabelNameStartDate;
    private javax.swing.JLabel jLabelTeamInfo;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldCellNumber;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldEmployeeID;
    private javax.swing.JTextField jTextFieldLevel;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldStartDate;
    private javax.swing.JTextField jTextFieldTeamInfo;
    // End of variables declaration//GEN-END:variables

    private void addDropDownElements() {
            choicePositionTitle.add("Others");
            choicePositionTitle.add("Junior Developer");
            choicePositionTitle.add("Senior Developer");
            choicePositionTitle.add("Manager");
            choicePositionTitle.add("Senior Manager");
            
    }

    private int validateInputFields(Person notValidated) {
        int validated=1;
        Pattern patternEmail = Pattern.compile("^[a-z0-9]+@[a-z]+.[a-z]+$");
        Matcher matcher = patternEmail.matcher(notValidated.getEmailAddress());
        Pattern patternCellNumber = Pattern.compile("^[+\\d](\\d{11})$");
        Matcher matcherCell = patternCellNumber.matcher(notValidated.getCellPhoneNumber());
        if(notValidated.getName() == null || notValidated.getName().isEmpty()){
            JOptionPane.showMessageDialog(this,"Name cannot be empty.");
            validated=0;
        }
        else if(notValidated.getEmployeeId() == null || notValidated.getEmployeeId().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee Id cannot be empty.");
            validated=0;
        }
        else if(notValidated.getAge() < 16 || notValidated.getAge() > 99){
            JOptionPane.showMessageDialog(this,"Employee Age cannot be less than 16 or greater than 99.");
            validated=0;
        }
        else if(notValidated.getStartDate().toString() == null || notValidated.getStartDate().toString().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee start date cannot be empty.");
            validated=0;
        }
        else if(notValidated.getEmailAddress() == null || notValidated.getEmailAddress().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee email address cannot be empty.");
            validated=0;
        }
        else if(notValidated.getCellPhoneNumber() == null || notValidated.getCellPhoneNumber().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee cell phone cannot be empty.");
            validated=0;
        }
        else if(notValidated.getPositionTitle() == null || notValidated.getPositionTitle().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee position title cannot be empty.");
            validated=0;
        }
        else if(notValidated.getLevel() == null || notValidated.getLevel().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee level cannot be empty.");
            validated=0;
        }
        else if(notValidated.getTeamInfo() == null || notValidated.getTeamInfo().isEmpty()){
            JOptionPane.showMessageDialog(this,"Employee team info cannot be empty.");
            validated=0;
        }
        else if (!matcherCell.matches()){
            JOptionPane.showMessageDialog(this,"Employee phone number should be valid.");
            validated=0;
        }
        else if (!matcher.matches()){
            JOptionPane.showMessageDialog(this,"Employee email should be valid.");
            validated=0;
        }
        else if (profileImage.length == 0){
            JOptionPane.showMessageDialog(this,"Employee profile pictue cannot be empty.");
            validated=0; 
        }
        return validated;
    }
}
