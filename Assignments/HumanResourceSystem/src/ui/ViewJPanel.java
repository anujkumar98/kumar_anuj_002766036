/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Person;
import models.PersonRegistory;

/**
 *
 * @author anujkumar
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    PersonRegistory personRecord;
    public ViewJPanel(PersonRegistory personRecord) {
        initComponents();
        this.personRecord=personRecord;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelAge = new javax.swing.JLabel();
        jTextFieldAge = new javax.swing.JTextField();
        jLabelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonDisplay = new javax.swing.JTable();
        jButtonFetchRecord = new javax.swing.JButton();
        jButtonDeleteRecord = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 400));
        setRequestFocusEnabled(false);

        jLabelName.setText("Name:");
        jLabelName.setLocation(new java.awt.Point(0, 6));

        jTextFieldName.setLocation(new java.awt.Point(0, 6));

        jLabelAge.setText("Age:");
        jLabelAge.setLocation(new java.awt.Point(0, 6));

        jTextFieldAge.setLocation(new java.awt.Point(0, 6));
        jTextFieldAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgeActionPerformed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("VIEW");
        jLabelTitle.setAlignmentY(0.0F);

        jTablePersonDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Test1", "Test2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePersonDisplay);

        jButtonFetchRecord.setText("Fetch");
        jButtonFetchRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchRecordActionPerformed(evt);
            }
        });

        jButtonDeleteRecord.setText("Delete");
        jButtonDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteRecordActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButtonFetchRecord)
                        .addGap(50, 50, 50)
                        .addComponent(jButtonUpdate)
                        .addGap(51, 51, 51)
                        .addComponent(jButtonDeleteRecord)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelName)
                    .addComponent(jLabelAge))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldName)
                    .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabelTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAge)
                            .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFetchRecord)
                    .addComponent(jButtonDeleteRecord)
                    .addComponent(jButtonUpdate))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgeActionPerformed

    private void jButtonFetchRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFetchRecordActionPerformed
        // TODO add your handling code here:
        int selectedIndex=jTablePersonDisplay.getSelectedRow();
        if (selectedIndex != -1){
            Person person=personRecord.fetchPerson(selectedIndex);
            jTextFieldName.setText(person.getName());
            jTextFieldAge.setText(String.valueOf(person.getAge()));
            return;
        }
        JOptionPane.showMessageDialog(this, "Please select a row to display");
    }//GEN-LAST:event_jButtonFetchRecordActionPerformed

    private void jButtonDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteRecordActionPerformed
        // TODO add your handling code here:
        int selectedIndex=jTablePersonDisplay.getSelectedRow();
        if (selectedIndex != -1){
            personRecord.deletePerson(selectedIndex);
            populateTable();
            JOptionPane.showMessageDialog(this, "Employee record deleted");
            jTextFieldName.setText("");
            jTextFieldAge.setText("");
            return;
        }
        JOptionPane.showMessageDialog(this, "Please select a row to delete");
    }//GEN-LAST:event_jButtonDeleteRecordActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if (jTextFieldName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please fetch a row to update");
            return;
        }
        String uniqueID=jTextFieldName.getText();//Get unique empolyee ID to update
        Person personUpdatedDetails=new Person();
        personUpdatedDetails.setName(jTextFieldName.getText());
        personUpdatedDetails.setAge(Integer.parseInt(jTextFieldAge.getText()));
        personRecord.updatePerson(uniqueID,personUpdatedDetails);
        JOptionPane.showMessageDialog(this, "Record Updated.");
        jTextFieldName.setText("");
        jTextFieldAge.setText("");
        populateTable();
    }//GEN-LAST:event_jButtonUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteRecord;
    private javax.swing.JButton jButtonFetchRecord;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersonDisplay;
    private javax.swing.JTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model=(DefaultTableModel) jTablePersonDisplay.getModel();
        model.setRowCount(0);
        for(Person p:personRecord.getPersonRecord()){
            Object[] row =new Object[4];
            row[0]=p.getName();
            row[1]=p.getAge();
            row[2]="Test1";
            row[3]="Test2";
            model.addRow(row);
        }
    }

}
